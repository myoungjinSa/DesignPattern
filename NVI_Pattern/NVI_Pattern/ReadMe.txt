NVI 패턴은 메서드 패턴이라고도 불린다.

NVI 패턴을 사용하면 인터페이스를 안정적으로, 비가상으로 만들 수 있으며,
그러면서도 커스텀화할 수 있는 행동들은 공개가 아닌 비공개 가상 함수들에게 위임할 수 있는 것이다.
즉, 인터페이스 지정과 구현 세부 지정이 깔끔하게 분리된 셈이다.

- 장점 : 1. 기반 클래스는 자신의 인터페이스와 방침을 완전히 제어할 수 있고, 변화에 더 안정적이다 
             왜냐하면가상함수 DoSkill 함수는 private이기 때문에 Control함수를 통해서만 호출 될 수 있다. 
             ->즉, Control함수에서 DoPreWork 함수와 DoPostWork함수와 같이 사전, 사후 동작을 
	    자식 클래스에서 반드시 따르도록 하게 만들수 있다.

-두드러지는 단점이 딱히 없음.